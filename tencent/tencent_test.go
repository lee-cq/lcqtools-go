package tencent_test

import (
	"fmt"
	"testing"

	"github.com/lee-cq/lcqtools-go/tencent"
)

func TestTencentOcrBase(t *testing.T) {
	ops := &tencent.RequestOptions{
		Method:    "POST",
		Url:       "https://ocr.tencentcloudapi.com",
		Service:   "ocr",
		Action:    "GeneralBasicOCR",
		Region:    "ap-guangzhou",
		Version:   "2018-11-19",
		SecretId:  "SecretId",
		SecretKey: "SecretKey",
		Token:     "",
		Body:      map[string]string{"ImageBase64": "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"},
	}
	response, err := ops.Request(false)
	if err != nil {
		t.Error(err)
	}
	fmt.Printf("%#v", ops.Headers)
	fmt.Printf("%s", response)

}
